version: "3.9"

services:
  postgres-commandes-test:
    image: postgres:13
    container_name: postgres_commandes_test
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: commandes_db
    ports:
      - "5544:5432"
    volumes:
      - pgdata-commandes-test:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_test
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  service-commandes:
    build:
      context: .
    container_name: service_commandes_test_app
    command: ["sh", "wait-for-it.sh", "rabbitmq_test", "5672", "--", "sh", "wait-for-it.sh", "postgres-commandes-test", "5432", "--", "./main"]
    environment:
      POSTGRES_CONN: postgres://user:password@postgres-commandes-test:5432/commandes_db?sslmode=disable
      RABBITMQ_URL: amqp://user:password@rabbitmq:5672/
    ports:
      - "8082:8082"
    depends_on:
      - postgres-commandes-test
      - rabbitmq

  test-runner:
    build:
      context: .
    container_name: service_commandes_test_runner
    command: ["sh", "wait-for-it.sh", "service-commandes", "8082", "--", "go", "test", "-v", "./tests/..."]
    volumes:
      - .:/app
    working_dir: /app
    environment:
      POSTGRES_CONN: postgres://user:password@postgres-commandes-test:5432/commandes_db?sslmode=disable
    depends_on:
      - service-commandes

volumes:
  pgdata-commandes-test:
